<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>3D Lead Generation Example</title>
  <style>
    /* [Your existing CSS remains here] */
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body, html { width: 100%; height: 100%; overflow: hidden; font-family: Arial, sans-serif; position: relative; }
    #three-canvas { width: 100%; height: 100%; display: block; }
    .lead-capture-container {
      position: absolute; top: 20px; right: 20px; width: 300px;
      background-color: rgba(255, 255, 255, 0.9); padding: 20px;
      border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.2);
    }
    .lead-capture-container h1 { font-size: 18px; margin-bottom: 10px; }
    .lead-capture-container input { width: 100%; margin-bottom: 10px; padding: 10px; font-size: 14px; border: 1px solid #ccc; border-radius: 4px; }
    .lead-capture-container button {
      width: 100%; padding: 12px; font-size: 14px; border: none;
      border-radius: 4px; cursor: pointer; background-color: #007BFF; color: #fff;
    }
    .lead-capture-container button:hover { opacity: 0.9; }
    .thank-you-message { margin-top: 10px; color: green; display: none; }
  </style>
</head>
<body>
  
  <!-- Lead Capture Form -->
  <div class="lead-capture-container">
    <h1>Join Our Mailing List</h1>
    <input type="text" id="nameField" placeholder="Your Name" required>
    <input type="email" id="emailField" placeholder="Your Email" required>
    <button id="submitBtn">Sign Me Up!</button>
    <div class="thank-you-message" id="thankYouMessage">
      Thank you for signing up!
    </div>
  </div>
  
  <!-- 3D Canvas -->
  <canvas id="three-canvas"></canvas>
  
  <!-- Using ES6 modules -->
  <script type="module">
    import * as THREE from 'https://cdn.jsdelivr.net/npm/three@0.152.2/build/three.module.js';
    import { OrbitControls } from 'https://cdn.jsdelivr.net/npm/three@0.152.2/examples/jsm/controls/OrbitControls.js';

    // Grab HTML elements
    const canvas = document.getElementById('three-canvas');
    const submitBtn = document.getElementById('submitBtn');
    const thankYouMessage = document.getElementById('thankYouMessage');
    const nameField = document.getElementById('nameField');
    const emailField = document.getElementById('emailField');

    // Basic Three.js setup
    let scene, camera, renderer, cube, controls;

    function init() {
      scene = new THREE.Scene();

      // Create a camera
      camera = new THREE.PerspectiveCamera(
        70, window.innerWidth / window.innerHeight, 0.1, 1000
      );
      camera.position.set(0, 2, 5);
      camera.lookAt(scene.position); // Ensure camera is pointed at the scene

      // Create renderer
      renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true });
      renderer.setSize(window.innerWidth, window.innerHeight);
      renderer.setPixelRatio(window.devicePixelRatio);

      // Add a simple cube
      const geometry = new THREE.BoxGeometry(1, 1, 1);
      const material = new THREE.MeshNormalMaterial();
      cube = new THREE.Mesh(geometry, material);
      scene.add(cube);

      // Optional lights
      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
      scene.add(ambientLight);
      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);
      directionalLight.position.set(10, 10, 10);
      scene.add(directionalLight);

      // Set up OrbitControls
      controls = new OrbitControls(camera, renderer.domElement);
      controls.enableDamping = true;
      controls.dampingFactor = 0.05;
      controls.enablePan = false;
      controls.minDistance = 2;
      controls.maxDistance = 10;

      window.addEventListener('resize', onWindowResize, false);
      animate();
    }

    function onWindowResize() {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    }

    function animate() {
      requestAnimationFrame(animate);
      cube.rotation.x += 0.01;
      cube.rotation.y += 0.01;
      controls.update();
      renderer.render(scene, camera);
    }

    // Form submission event
    submitBtn.addEventListener('click', function() {
      const nameValue = nameField.value.trim();
      const emailValue = emailField.value.trim();

      if (!nameValue || !emailValue) {
        alert('Please fill in both Name and Email');
        return;
      }

      // Simulate form submission
      thankYouMessage.style.display = 'block';
      nameField.value = '';
      emailField.value = '';
    });

    init();
  </script>
</body>
</html>
